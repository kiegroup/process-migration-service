<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.jboss</groupId>
    <artifactId>jboss-parent</artifactId>
    <!-- Keep in sync with jboss-parent version in kie-user-bom-parent/pom.xml -->
    <version>36</version>
  </parent>
  <groupId>org.kie</groupId>
  <artifactId>process-migration-service</artifactId>
  <name>Process Instance Migration Service</name>
  <version>7.66.0-SNAPSHOT</version>

  <properties>
    <maven.compiler.target>11</maven.compiler.target>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.release>11</maven.compiler.release>
    <maven.compiler.parameters>true</maven.compiler.parameters>
    <version.com.fasterxml.jackson.core.jackson-databind>2.10.5.1</version.com.fasterxml.jackson.core.jackson-databind>
    <version.frontend.plugin>1.12.0</version.frontend.plugin>
    <version.io.quarkus>2.2.3.Final</version.io.quarkus>
    <version.io.quarkiverse.file-vault>0.1.0</version.io.quarkiverse.file-vault>
    <version.org.github.tomakehurst.wiremock-jre8>2.27.2</version.org.github.tomakehurst.wiremock-jre8>
    <version.org.kie.server>${project.version}</version.org.kie.server>
    <version.org.mockito>3.7.7</version.org.mockito>
    <version.org.projectlombok.lombok>1.18.16</version.org.projectlombok.lombok>
    <version.org.testcontainers>1.15.3</version.org.testcontainers>

    <maven.jdbc.db-kind>h2</maven.jdbc.db-kind>
    <maven.jdbc.url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</maven.jdbc.url>
    <maven.jdbc.username>sa</maven.jdbc.username>
    <maven.jdbc.password>sa</maven.jdbc.password>

    <maven.pim.flyway.prefix.version>1.0.0__</maven.pim.flyway.prefix.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-bom</artifactId>
        <version>${version.io.quarkus}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${version.org.projectlombok.lombok}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>com.github.tomakehurst</groupId>
        <artifactId>wiremock-jre8</artifactId>
        <version>${version.org.github.tomakehurst.wiremock-jre8}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>${version.org.mockito}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>io.quarkiverse.file-vault</groupId>
        <artifactId>quarkus-file-vault</artifactId>
        <version>${version.io.quarkiverse.file-vault}</version>
      </dependency>
      <!-- droolsjbpm-integration dependencies - start -->
      <dependency>
        <groupId>org.kie.server</groupId>
        <artifactId>kie-server-client</artifactId>
        <version>${version.org.kie.server}</version>
      </dependency>
      <dependency>
        <groupId>org.kie.server</groupId>
        <artifactId>kie-server-controller-client</artifactId>
        <version>${version.org.kie.server}</version>
      </dependency>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>kie-test-util</artifactId>
        <version>${version.org.kie.server}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${version.com.fasterxml.jackson.core.jackson-databind}</version>
      </dependency>
      <!--  droolsjbpm-integration dependencies- end -->
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers</artifactId>
        <version>${version.org.testcontainers}</version>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${version.org.testcontainers}</version>
      </dependency>
      <dependency>
        <groupId>org.kie.soup</groupId>
        <artifactId>kie-soup-maven-integration</artifactId>
        <version>${version.org.kie.server}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- KIE Dependencies -->
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie.server</groupId>
      <artifactId>kie-server-controller-client</artifactId>
    </dependency>

    <!-- Quarkus -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-resteasy-jackson</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-smallrye-health</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-config-yaml</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-hibernate-orm-panache</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-quartz</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-container-image-jib</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-flyway</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkiverse.file-vault</groupId>
      <artifactId>quarkus-file-vault</artifactId>
    </dependency>
    <!-- JDBC Extensions -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-h2</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-mariadb</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-mysql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-mssql</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-oracle</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-jdbc-db2</artifactId>
    </dependency>
    <!-- Bundled identityProviders -->
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-elytron-security-properties-file</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-elytron-security-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-elytron-security-ldap</artifactId>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-narayana-jta</artifactId>
    </dependency>
    <!-- External dependencies -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-test-util</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-junit5-mockito</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.quarkus</groupId>
      <artifactId>quarkus-test-h2</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-jre8</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.kie.soup</groupId>
      <artifactId>kie-soup-maven-integration</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
      <testResource>
        <directory>src/test/filtered-resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>*.yaml</include>
        </includes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <forceJavacCompilerUse>true</forceJavacCompilerUse>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.quarkus</groupId>
        <artifactId>quarkus-maven-plugin</artifactId>
        <version>${version.io.quarkus}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <goals>
              <goal>build</goal>
              <goal>generate-code</goal>
              <goal>generate-code-tests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
            <maven.home>${maven.home}</maven.home>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <systemPropertyVariables>
            <kieserver.container.name>jboss/kie-server-showcase</kieserver.container.name>
            <kieserver.container.tag>latest</kieserver.container.tag>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${version.frontend.plugin}</version>
        <configuration>
          <workingDirectory>frontend</workingDirectory>
          <nodeVersion>v12.16.2</nodeVersion>
          <npmVersion>7.15.1</npmVersion>
          <yarnVersion>v1.22.4</yarnVersion>
        </configuration>
        <executions>
          <execution>
            <id>install node and npm</id>
            <phase>initialize</phase>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
          </execution>
          <execution>
            <id>lock-treatment-tool execution</id>
            <phase>initialize</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>exec @kie/lock-treatment-tool --</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <phase>compile</phase>
            <goals>
              <goal>npm</goal>
            </goals>
          </execution>
          <execution>
            <id>npm run build</id>
            <phase>compile</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
          <execution>
            <id>run tests</id>
            <phase>test</phase>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>test</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-classes</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/META-INF/resources</outputDirectory>
              <resources>
                <resource>
                  <directory>frontend/dist</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>copy-css</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/css</outputDirectory>
              <overwrite>true</overwrite>
              <resources>
                <resource>
                  <directory>frontend/src/css/</directory>
                  <includes>
                    <include>**/*</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <configuration>
              <target>
                <concat destfile="${project.build.outputDirectory}/db/migration/h2/h2${maven.pim.flyway.prefix.version}pim-schema.sql">
                  <fileset file="${project.basedir}/ddl-scripts/h2/h2-quartz-schema.sql" />
                  <fileset file="${project.basedir}/ddl-scripts/h2/h2-pim-schema.sql" />
                </concat>
                <concat destfile="${project.build.outputDirectory}/db/migration/db2/db2${maven.pim.flyway.prefix.version}pim-schema.sql">
                  <fileset file="${project.basedir}/ddl-scripts/db2/db2-quartz-schema.sql" />
                  <fileset file="${project.basedir}/ddl-scripts/db2/db2-pim-schema.sql" />
                </concat>
                <concat destfile="${project.build.outputDirectory}/db/migration/mariadb/mariadb${maven.pim.flyway.prefix.version}pim-schema.sql">
                  <fileset file="${project.basedir}/ddl-scripts/mariadb/mariadb-quartz-schema.sql" />
                  <fileset file="${project.basedir}/ddl-scripts/mariadb/mariadb-pim-schema.sql" />
                </concat>
                <concat destfile="${project.build.outputDirectory}/db/migration/mssql/mssql${maven.pim.flyway.prefix.version}pim-schema.sql">
                  <fileset file="${project.basedir}/ddl-scripts/mssql/mssql-quartz-schema.sql" />
                  <fileset file="${project.basedir}/ddl-scripts/mssql/mssql-pim-schema.sql" />
                </concat>
                <concat destfile="${project.build.outputDirectory}/db/migration/mysql/mysql${maven.pim.flyway.prefix.version}pim-schema.sql">
                  <fileset file="${project.basedir}/ddl-scripts/mysql/mysql-quartz-schema.sql" />
                  <fileset file="${project.basedir}/ddl-scripts/mysql/mysql-pim-schema.sql" />
                </concat>
                <concat destfile="${project.build.outputDirectory}/db/migration/oracle/oracle${maven.pim.flyway.prefix.version}pim-schema.sql">
                  <fileset file="${project.basedir}/ddl-scripts/oracle/oracle-quartz-schema.sql" />
                  <fileset file="${project.basedir}/ddl-scripts/oracle/oracle-pim-schema.sql" />
                </concat>
                <concat destfile="${project.build.outputDirectory}/db/migration/postgresql/postgresql${maven.pim.flyway.prefix.version}pim-schema.sql">
                  <fileset file="${project.basedir}/ddl-scripts/postgresql/postgresql-quartz-schema.sql" />
                  <fileset file="${project.basedir}/ddl-scripts/postgresql/postgresql-pim-schema.sql" />
                </concat>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${version.assembly.plugin}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/process-migration-distribution.xml</descriptor>
          </descriptors>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>podman</id>
      <activation>
        <file>
          <exists>/run/user/1000/podman/podman.sock</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <environmentVariables>
                <DOCKER_HOST>unix:///run/user/1000/podman/podman.sock</DOCKER_HOST>
                <TESTCONTAINERS_RYUK_DISABLED>true</TESTCONTAINERS_RYUK_DISABLED>
                <api.version>v2</api.version>
              </environmentVariables>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>native</id>
      <activation>
        <property>
          <name>native</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
                <configuration>
                  <systemPropertyVariables>
                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                    <maven.home>${maven.home}</maven.home>
                  </systemPropertyVariables>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <properties>
        <quarkus.package.type>native</quarkus.package.type>
      </properties>
    </profile>

    <profile>
      <id>h2</id>
      <activation>
        <property>
          <name>maven.jdbc.driver.class</name>
          <value>org.h2.Driver</value>
        </property>
      </activation>
      <properties>
        <maven.jdbc.db-kind>h2</maven.jdbc.db-kind>
      </properties>
    </profile>

    <profile>
      <id>postgresql</id>
      <activation>
        <property>
          <name>maven.jdbc.driver.class</name>
          <value>org.postgresql.Driver</value>
        </property>
      </activation>
      <properties>
        <maven.jdbc.db-kind>postgresql</maven.jdbc.db-kind>
      </properties>
    </profile>

    <profile>
      <id>db2</id>
      <activation>
        <property>
          <name>maven.jdbc.driver.class</name>
          <value>com.ibm.db2.jcc.DB2Driver</value>
        </property>
      </activation>
      <properties>
        <maven.jdbc.db-kind>db2</maven.jdbc.db-kind>
      </properties>
    </profile>

    <profile>
      <id>mariadb</id>
      <activation>
        <property>
          <name>maven.jdbc.driver.class</name>
          <value>org.mariadb.jdbc.Driver</value>
        </property>
      </activation>
      <properties>
        <maven.jdbc.db-kind>mariadb</maven.jdbc.db-kind>
      </properties>
    </profile>

    <profile>
      <id>mssql</id>
      <activation>
        <property>
          <name>maven.jdbc.driver.class</name>
          <value>com.microsoft.sqlserver.jdbc.SQLServerDriver</value>
        </property>
      </activation>
      <properties>
        <maven.jdbc.db-kind>mssql</maven.jdbc.db-kind>
      </properties>
    </profile>

    <profile>
      <id>mysql</id>
      <activation>
        <property>
          <name>maven.jdbc.driver.class</name>
          <value>com.mysql.cj.jdbc.Driver</value>
        </property>
      </activation>
      <properties>
        <maven.jdbc.db-kind>mysql</maven.jdbc.db-kind>
      </properties>
    </profile>

    <profile>
      <id>oracle</id>
      <activation>
        <property>
          <name>maven.jdbc.driver.class</name>
          <value>oracle.jdbc.OracleDriver</value>
        </property>
      </activation>
      <properties>
        <maven.jdbc.db-kind>oracle</maven.jdbc.db-kind>
      </properties>
    </profile>
  </profiles>
</project>
